###############################################################################
# Makefile automatically generated by Code::Blocks IDE                        #
###############################################################################

# Project:          ModFileReg
# Project filename: /home/dak/zia/Modules/unix/ModFileReg/ModFileReg.cbp
# Compiler used:    GNU GCC Compiler

SHELL=/bin/bash

### Variables used in this Makefile
default_CC=gcc
default_CPP=g++
default_LD=g++
default_LIB=ar
default_RESCOMP=

### Compiler/linker options
default_GLOBAL_CFLAGS=
default_PROJECT_CFLAGS=
default_GLOBAL_LDFLAGS=
default_PROJECT_LDFLAGS=
default_GLOBAL_INCS= -I/usr/include
default_PROJECT_INCS= -I../../common/includes -I../../../src/includes -I../ModProtocol -I../ModAnswering
default_GLOBAL_LIBDIRS= -L/usr/lib
default_PROJECT_LIBDIRS=
default_GLOBAL_LIBS=
default_PROJECT_LIBS=

### Targets compiler flags
default_CFLAGS= $(default_PROJECT_CFLAGS) $(default_GLOBAL_CFLAGS)

### Targets linker flags
default_LDFLAGS= $(default_PROJECT_LDFLAGS) $(default_GLOBAL_LDFLAGS)

### Targets include directories
default_INCS= $(default_PROJECT_INCS) $(default_GLOBAL_INCS)

### Targets library directories
default_LIBDIRS= $(default_PROJECT_LIBDIRS) $(default_GLOBAL_LIBDIRS)

### Targets libraries
default_LIBS= $(default_PROJECT_LIBS) $(default_GLOBAL_LIBS)

###############################################################################
#         You shouldn't need to modify anything beyond this point             #
###############################################################################

### Objects used in this Makefile
default_OBJS=.objs/Modules/common/DBuffer.o .objs/Modules/unix/ModAnswering/Reader.o .objs/Modules/unix/ModAnswering/ServerAnswer.o .objs/Modules/unix/ModFileReg/FileReq.o .objs/Modules/unix/ModFileReg/ModFileReg.o .objs/Modules/unix/ModFileReg/OnFile.o .objs/src/Ticket.o .objs/src/TicketsHandler.o 
default_LINKOBJS=$(default_OBJS)
default_DEPS=.deps/Modules/common/DBuffer.d .deps/Modules/unix/ModAnswering/Reader.d .deps/Modules/unix/ModAnswering/ServerAnswer.d .deps/Modules/unix/ModFileReg/FileReq.d .deps/Modules/unix/ModFileReg/ModFileReg.d .deps/Modules/unix/ModFileReg/OnFile.d .deps/src/Ticket.d .deps/src/TicketsHandler.d 

### The targets of this project
default_BIN=ModFileReg.so
default_STATIC_LIB=libModFileReg.a
default_LIB_DEF=libModFileReg.def

.PHONY: all all-before all-custom all-after clean clean-custom distclean distclean-custom depend_default default-before default-after 

all: all-before default all-after


dist:
	@zip ModFileReg.cbp.zip ModFileReg.cbp Makefile ../../common/DBuffer.cpp ../ModAnswering/Reader.cpp ../ModAnswering/ServerAnswer.cpp FileReq.cpp FileReq.h ModFileReg.cpp OnFile.cpp OnFile.h ../../../src/Ticket.cpp ../../../src/TicketsHandler.cpp 

clean_default:
	@echo Cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_RESOURCE) $(default_STATIC_LIB) $(default_LIB_DEF) 

distclean_default:
	@echo Dist-cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_DEPS) $(default_RESOURCE) $(default_STATIC_LIB) $(default_LIB_DEF) 

clean: clean_default 

distclean: distclean_default 

depend_default_DIRS:
	-@if ! test -d .deps; then mkdir .deps; fi
	-@if ! test -d .deps/Modules; then mkdir .deps/Modules; fi
	-@if ! test -d .deps/Modules/common; then mkdir .deps/Modules/common; fi
	-@if ! test -d .deps/Modules/unix; then mkdir .deps/Modules/unix; fi
	-@if ! test -d .deps/Modules/unix/ModAnswering; then mkdir .deps/Modules/unix/ModAnswering; fi
	-@if ! test -d .deps/Modules/unix/ModFileReg; then mkdir .deps/Modules/unix/ModFileReg; fi
	-@if ! test -d .deps/src; then mkdir .deps/src; fi

depend_default: depend_default_DIRS $(default_DEPS)

depend: depend_default

default_DIRS:
	-@if ! test -d .objs; then mkdir .objs; fi
	-@if ! test -d .objs/Modules; then mkdir .objs/Modules; fi
	-@if ! test -d .objs/Modules/common; then mkdir .objs/Modules/common; fi
	-@if ! test -d .objs/Modules/unix; then mkdir .objs/Modules/unix; fi
	-@if ! test -d .objs/Modules/unix/ModAnswering; then mkdir .objs/Modules/unix/ModAnswering; fi
	-@if ! test -d .objs/Modules/unix/ModFileReg; then mkdir .objs/Modules/unix/ModFileReg; fi
	-@if ! test -d .objs/src; then mkdir .objs/src; fi

default: depend_default default_DIRS default-before $(default_BIN) default-after

$(default_BIN): $(default_LINKOBJS) $(default_RESOURCE)
	@echo Linking shared library "ModFileReg.so"...
	@/usr/ccs/bin/ld -G $(default_LIBDIRS) $(default_LINKOBJS) $(default_RESOURCE) -o $(default_BIN) $(default_LDFLAGS) $(default_LIBS)


.deps/Modules/common/DBuffer.d: ../../common/DBuffer.cpp
	@echo Calculating dependencies for "../../common/DBuffer.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Modules/common/DBuffer.d -MT .objs/Modules/common/DBuffer.o $(default_INCS) ../../common/DBuffer.cpp

.objs/Modules/common/DBuffer.o: .deps/Modules/common/DBuffer.d
	@echo Compiling "../../common/DBuffer.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../../common/DBuffer.cpp -o .objs/Modules/common/DBuffer.o

.deps/Modules/unix/ModAnswering/Reader.d: ../ModAnswering/Reader.cpp
	@echo Calculating dependencies for "../ModAnswering/Reader.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Modules/unix/ModAnswering/Reader.d -MT .objs/Modules/unix/ModAnswering/Reader.o $(default_INCS) ../ModAnswering/Reader.cpp

.objs/Modules/unix/ModAnswering/Reader.o: .deps/Modules/unix/ModAnswering/Reader.d
	@echo Compiling "../ModAnswering/Reader.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../ModAnswering/Reader.cpp -o .objs/Modules/unix/ModAnswering/Reader.o

.deps/Modules/unix/ModAnswering/ServerAnswer.d: ../ModAnswering/ServerAnswer.cpp
	@echo Calculating dependencies for "../ModAnswering/ServerAnswer.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Modules/unix/ModAnswering/ServerAnswer.d -MT .objs/Modules/unix/ModAnswering/ServerAnswer.o $(default_INCS) ../ModAnswering/ServerAnswer.cpp

.objs/Modules/unix/ModAnswering/ServerAnswer.o: .deps/Modules/unix/ModAnswering/ServerAnswer.d
	@echo Compiling "../ModAnswering/ServerAnswer.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../ModAnswering/ServerAnswer.cpp -o .objs/Modules/unix/ModAnswering/ServerAnswer.o

.deps/Modules/unix/ModFileReg/FileReq.d: FileReq.cpp
	@echo Calculating dependencies for "FileReq.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Modules/unix/ModFileReg/FileReq.d -MT .objs/Modules/unix/ModFileReg/FileReq.o $(default_INCS) FileReq.cpp

.objs/Modules/unix/ModFileReg/FileReq.o: .deps/Modules/unix/ModFileReg/FileReq.d
	@echo Compiling "FileReq.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c FileReq.cpp -o .objs/Modules/unix/ModFileReg/FileReq.o

.deps/Modules/unix/ModFileReg/ModFileReg.d: ModFileReg.cpp
	@echo Calculating dependencies for "ModFileReg.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Modules/unix/ModFileReg/ModFileReg.d -MT .objs/Modules/unix/ModFileReg/ModFileReg.o $(default_INCS) ModFileReg.cpp

.objs/Modules/unix/ModFileReg/ModFileReg.o: .deps/Modules/unix/ModFileReg/ModFileReg.d
	@echo Compiling "ModFileReg.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ModFileReg.cpp -o .objs/Modules/unix/ModFileReg/ModFileReg.o

.deps/Modules/unix/ModFileReg/OnFile.d: OnFile.cpp
	@echo Calculating dependencies for "OnFile.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Modules/unix/ModFileReg/OnFile.d -MT .objs/Modules/unix/ModFileReg/OnFile.o $(default_INCS) OnFile.cpp

.objs/Modules/unix/ModFileReg/OnFile.o: .deps/Modules/unix/ModFileReg/OnFile.d
	@echo Compiling "OnFile.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c OnFile.cpp -o .objs/Modules/unix/ModFileReg/OnFile.o

.deps/src/Ticket.d: ../../../src/Ticket.cpp
	@echo Calculating dependencies for "../../../src/Ticket.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Ticket.d -MT .objs/src/Ticket.o $(default_INCS) ../../../src/Ticket.cpp

.objs/src/Ticket.o: .deps/src/Ticket.d
	@echo Compiling "../../../src/Ticket.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../../../src/Ticket.cpp -o .objs/src/Ticket.o

.deps/src/TicketsHandler.d: ../../../src/TicketsHandler.cpp
	@echo Calculating dependencies for "../../../src/TicketsHandler.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/TicketsHandler.d -MT .objs/src/TicketsHandler.o $(default_INCS) ../../../src/TicketsHandler.cpp

.objs/src/TicketsHandler.o: .deps/src/TicketsHandler.d
	@echo Compiling "../../../src/TicketsHandler.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ../../../src/TicketsHandler.cpp -o .objs/src/TicketsHandler.o


