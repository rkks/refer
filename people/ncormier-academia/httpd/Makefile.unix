###############################################################################
# Makefile automatically generated by Code::Blocks IDE                        #
###############################################################################

# Project:          Zia
# Project filename: /mnt/diablotin_home/nico/lang/c++/zia/Zia.cbp
# Compiler used:    GNU GCC Compiler

### Variables used in this Makefile
default_CC=gcc
default_CPP=g++
default_LD=g++
default_LIB=ar
default_RESCOMP=

### Compiler/linker options
default_GLOBAL_CFLAGS=
default_PROJECT_CFLAGS=
default_GLOBAL_LDFLAGS=
default_PROJECT_LDFLAGS=
default_GLOBAL_INCS= -I/usr/include
default_PROJECT_INCS= -Isrc/includes -Ilib/tinyxml
default_GLOBAL_LIBDIRS= -L/usr/lib
default_PROJECT_LIBDIRS=
default_GLOBAL_LIBS=
default_PROJECT_LIBS= -lpthread lib/tinyxml/libtinyxml.a

### Targets compiler flags
default_CFLAGS= $(default_PROJECT_CFLAGS) $(default_GLOBAL_CFLAGS)

### Targets linker flags
default_LDFLAGS= $(default_PROJECT_LDFLAGS) $(default_GLOBAL_LDFLAGS)

### Targets include directories
default_INCS= $(default_PROJECT_INCS) $(default_GLOBAL_INCS)

### Targets library directories
default_LIBDIRS= $(default_PROJECT_LIBDIRS) $(default_GLOBAL_LIBDIRS)

### Targets libraries
default_LIBS= $(default_PROJECT_LIBS) $(default_GLOBAL_LIBS)

###############################################################################
#         You shouldn't need to modify anything beyond this point             #
###############################################################################

### Objects used in this Makefile
default_OBJS=.objs/src/Core.o .objs/src/CoreMsg.o .objs/src/Dll.o .objs/src/Module.o .objs/src/ModuleConf.o .objs/src/Mutex.o .objs/src/Semaphore.o .objs/src/Thread.o .objs/src/Ticket.o .objs/src/TicketsHandler.o .objs/src/XmlContainer.o .objs/src/XmlParser.o .objs/src/XmlValidator.o .objs/src/Zia.o .objs/src/CmdParser.o 
default_LINKOBJS=$(default_OBJS)
default_DEPS=.deps/src/Core.d .deps/src/CoreMsg.d .deps/src/Dll.d .deps/src/Module.d .deps/src/ModuleConf.d .deps/src/Mutex.d .deps/src/Semaphore.d .deps/src/Thread.d .deps/src/Ticket.d .deps/src/TicketsHandler.d .deps/src/XmlContainer.d .deps/src/XmlParser.d .deps/src/XmlValidator.d .deps/src/Zia.d .deps/src/CmdParser.d 

### The targets of this project
default_BIN=Zia

.PHONY: all all-before all-custom all-after clean clean-custom distclean distclean-custom depend_default default-before default-after 

all: all-before default all-after


dist:
	@zip Zia.cbp.zip Zia.cbp Makefile src/CmdParser.cpp src/Core.cpp src/CoreMsg.cpp src/Dll.cpp src/Module.cpp src/ModuleConf.cpp src/Mutex.cpp src/Semaphore.cpp src/Thread.cpp src/Ticket.cpp src/TicketsHandler.cpp src/XmlContainer.cpp src/XmlParser.cpp src/XmlValidator.cpp src/Zia.cpp src/includes/Actions.h src/includes/CmdParser.h src/includes/Core.h src/includes/CoreMsg.h src/includes/Dll.h src/includes/Exceptions.h src/includes/ICData.h src/includes/IDll.h src/includes/IModuleData.h src/includes/IMutex.h src/includes/ISemaphore.h src/includes/IThread.h src/includes/LeakWatcher.h src/includes/Module.h src/includes/ModuleArg.h src/includes/ModuleConf.h src/includes/ModuleData.h src/includes/Mutex.h src/includes/Semaphore.h src/includes/Thread.h src/includes/Ticket.h src/includes/TicketsHandler.h src/includes/XmlContainer.h src/includes/XmlParser.h src/includes/XmlValidator.h src/includes/ZiaString.h src/includes/utils/Console.h src/includes/utils/cmpfunc.h src/includes/utils/debug.h 

clean_default:
	@echo Cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_RESOURCE) 

distclean_default:
	@echo Dist-cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_DEPS) $(default_RESOURCE) 

clean: clean_default 

distclean: distclean_default 

depend_default_DIRS:
	-@if ! test -d .deps; then mkdir .deps; fi
	-@if ! test -d .deps/src; then mkdir .deps/src; fi
	-@if ! test -d .deps/src/includes; then mkdir .deps/src/includes; fi
	-@if ! test -d .deps/src/includes/utils; then mkdir .deps/src/includes/utils; fi

depend_default: depend_default_DIRS $(default_DEPS)

depend: depend_default

default_DIRS:
	-@if ! test -d .objs; then mkdir .objs; fi
	-@if ! test -d .objs/src; then mkdir .objs/src; fi
	-@if ! test -d .objs/src/includes; then mkdir .objs/src/includes; fi
	-@if ! test -d .objs/src/includes/utils; then mkdir .objs/src/includes/utils; fi

default: depend_default default_DIRS default-before $(default_BIN) default-after

$(default_BIN): $(default_LINKOBJS) $(default_RESOURCE)
	@echo Linking executable "Zia"...
	@$(default_LD) $(default_LIBDIRS) -o $(default_BIN) $(default_LINKOBJS) $(default_RESOURCE) $(default_LDFLAGS) $(default_LIBS)


.deps/src/Core.d: src/Core.cpp
	@echo Calculating dependencies for "src/Core.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Core.d -MT .objs/src/Core.o $(default_INCS) src/Core.cpp

.objs/src/Core.o: .deps/src/Core.d
	@echo Compiling "src/Core.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/Core.cpp -o .objs/src/Core.o

.deps/src/CoreMsg.d: src/CoreMsg.cpp
	@echo Calculating dependencies for "src/CoreMsg.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/CoreMsg.d -MT .objs/src/CoreMsg.o $(default_INCS) src/CoreMsg.cpp

.objs/src/CoreMsg.o: .deps/src/CoreMsg.d
	@echo Compiling "src/CoreMsg.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/CoreMsg.cpp -o .objs/src/CoreMsg.o

.deps/src/Dll.d: src/Dll.cpp
	@echo Calculating dependencies for "src/Dll.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Dll.d -MT .objs/src/Dll.o $(default_INCS) src/Dll.cpp

.objs/src/Dll.o: .deps/src/Dll.d
	@echo Compiling "src/Dll.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/Dll.cpp -o .objs/src/Dll.o

.deps/src/Module.d: src/Module.cpp
	@echo Calculating dependencies for "src/Module.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Module.d -MT .objs/src/Module.o $(default_INCS) src/Module.cpp

.objs/src/Module.o: .deps/src/Module.d
	@echo Compiling "src/Module.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/Module.cpp -o .objs/src/Module.o

.deps/src/ModuleConf.d: src/ModuleConf.cpp
	@echo Calculating dependencies for "src/ModuleConf.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/ModuleConf.d -MT .objs/src/ModuleConf.o $(default_INCS) src/ModuleConf.cpp

.objs/src/ModuleConf.o: .deps/src/ModuleConf.d
	@echo Compiling "src/ModuleConf.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/ModuleConf.cpp -o .objs/src/ModuleConf.o

.deps/src/Mutex.d: src/Mutex.cpp
	@echo Calculating dependencies for "src/Mutex.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Mutex.d -MT .objs/src/Mutex.o $(default_INCS) src/Mutex.cpp

.objs/src/Mutex.o: .deps/src/Mutex.d
	@echo Compiling "src/Mutex.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/Mutex.cpp -o .objs/src/Mutex.o

.deps/src/Semaphore.d: src/Semaphore.cpp
	@echo Calculating dependencies for "src/Semaphore.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Semaphore.d -MT .objs/src/Semaphore.o $(default_INCS) src/Semaphore.cpp

.objs/src/Semaphore.o: .deps/src/Semaphore.d
	@echo Compiling "src/Semaphore.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/Semaphore.cpp -o .objs/src/Semaphore.o

.deps/src/Thread.d: src/Thread.cpp
	@echo Calculating dependencies for "src/Thread.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Thread.d -MT .objs/src/Thread.o $(default_INCS) src/Thread.cpp

.objs/src/Thread.o: .deps/src/Thread.d
	@echo Compiling "src/Thread.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/Thread.cpp -o .objs/src/Thread.o

.deps/src/Ticket.d: src/Ticket.cpp
	@echo Calculating dependencies for "src/Ticket.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Ticket.d -MT .objs/src/Ticket.o $(default_INCS) src/Ticket.cpp

.objs/src/Ticket.o: .deps/src/Ticket.d
	@echo Compiling "src/Ticket.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/Ticket.cpp -o .objs/src/Ticket.o

.deps/src/TicketsHandler.d: src/TicketsHandler.cpp
	@echo Calculating dependencies for "src/TicketsHandler.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/TicketsHandler.d -MT .objs/src/TicketsHandler.o $(default_INCS) src/TicketsHandler.cpp

.objs/src/TicketsHandler.o: .deps/src/TicketsHandler.d
	@echo Compiling "src/TicketsHandler.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/TicketsHandler.cpp -o .objs/src/TicketsHandler.o

.deps/src/XmlContainer.d: src/XmlContainer.cpp
	@echo Calculating dependencies for "src/XmlContainer.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/XmlContainer.d -MT .objs/src/XmlContainer.o $(default_INCS) src/XmlContainer.cpp

.objs/src/XmlContainer.o: .deps/src/XmlContainer.d
	@echo Compiling "src/XmlContainer.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/XmlContainer.cpp -o .objs/src/XmlContainer.o

.deps/src/XmlParser.d: src/XmlParser.cpp
	@echo Calculating dependencies for "src/XmlParser.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/XmlParser.d -MT .objs/src/XmlParser.o $(default_INCS) src/XmlParser.cpp

.objs/src/XmlParser.o: .deps/src/XmlParser.d
	@echo Compiling "src/XmlParser.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/XmlParser.cpp -o .objs/src/XmlParser.o

.deps/src/XmlValidator.d: src/XmlValidator.cpp
	@echo Calculating dependencies for "src/XmlValidator.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/XmlValidator.d -MT .objs/src/XmlValidator.o $(default_INCS) src/XmlValidator.cpp

.objs/src/XmlValidator.o: .deps/src/XmlValidator.d
	@echo Compiling "src/XmlValidator.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/XmlValidator.cpp -o .objs/src/XmlValidator.o

.deps/src/Zia.d: src/Zia.cpp
	@echo Calculating dependencies for "src/Zia.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/Zia.d -MT .objs/src/Zia.o $(default_INCS) src/Zia.cpp

.objs/src/Zia.o: .deps/src/Zia.d
	@echo Compiling "src/Zia.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/Zia.cpp -o .objs/src/Zia.o

.deps/src/CmdParser.d: src/CmdParser.cpp
	@echo Calculating dependencies for "src/CmdParser.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/src/CmdParser.d -MT .objs/src/CmdParser.o $(default_INCS) src/CmdParser.cpp

.objs/src/CmdParser.o: .deps/src/CmdParser.d
	@echo Compiling "src/CmdParser.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c src/CmdParser.cpp -o .objs/src/CmdParser.o


