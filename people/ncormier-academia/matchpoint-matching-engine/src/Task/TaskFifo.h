/******************************************************************************
 ******************************************************************************
 * Copyright (c) 2007 MatchPoint, All rights reserved
 *
 * File    :    TaskFifo.h
 * Desc    :    TaskInfo object declaration
 *              TaskFifo retain&release Tasks. You have to call Retain when you
 *              GetATask.
 * Author  :    nico
 *****************************************************************************/

#ifndef __TASK_FIFO_H__
# define __TASK_FIFO_H__

/*****************************************************************************/
/* Header files                                                              */
/*****************************************************************************/
# include "Fifo.h"
/*****************************************************************************/
/* Default namespace                                                         */
/*****************************************************************************/
# include "DefaultNamespace.h"
DNSPACE_OPEN
/*****************************************************************************/
/* Forward definitions                                                       */
/*****************************************************************************/
class Task;
class Semaphore;
/*****************************************************************************/
/* Types Definition                                                          */
/*****************************************************************************/
class TaskFifo
{
  /***************************************************************************/
  /* Methods                                                                 */
  /***************************************************************************/
public:
            TaskFifo(void);
  virtual  ~TaskFifo(void);
  Task*     GetATask(void); /* Synchronous call */
  Task*     TryGetATask(void); /* Task may be NULL */
  void      AddATask(Task* task);
  unsigned  TasksCount(void);
  /***************************************************************************/
  /* Properties                                                              */
  /***************************************************************************/
private:
  Semaphore*    m_sem;    /* Fifo semaphore */
  Fifo<Task*>*  m_fifo;   /* Task fifo, access thread safe */
};
/*****************************************************************************/
/* Default namespace close                                                   */
/*****************************************************************************/
DNSPACE_CLOSE


#endif /* __TASK_FIFO_H__ */
