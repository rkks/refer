//#!C
/*
% Part of MotorControl containing a lookup table for speed / position regulation,
% to be used by the PD-controller and generated by "TestVFromPos.m"
%
% Signature
%   Author: Linus Atorf (see AUTHORS)
%   Date: 2009/08/21
%   Copyright: 2007-2009, RWTH Aachen University
%
%
% ***********************************************************************************************
% *  This file is part of the RWTH - Mindstorms NXT Toolbox.                                    *
% *                                                                                             *
% *  The RWTH - Mindstorms NXT Toolbox is free software: you can redistribute it and/or modify  *
% *  it under the terms of the GNU General Public License as published by the Free Software     *
% *  Foundation, either version 3 of the License, or (at your option) any later version.        *
% *                                                                                             *
% *  The RWTH - Mindstorms NXT Toolbox is distributed in the hope that it will be useful,       *
% *  but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  *
% *  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
% *                                                                                             *
% *  You should have received a copy of the GNU General Public License along with the           *
% *  RWTH - Mindstorms NXT Toolbox. If not, see <http://www.gnu.org/licenses/>.                 *
% ***********************************************************************************************
*/

#ifndef __SPEEDFROMPOSLOOKUP_NXC__
#define __SPEEDFROMPOSLOOKUP_NXC__


#define SPEEDLUTSIZE 301
#define SPEEDLUTSCALING 10000 // scaled * 100, + to get percentages * 100 ...

int SpeedFromPosLUT[SPEEDLUTSIZE];


inline long GetIdealSpeedFromPos(long x, long maxSpeed, long brakingDist) {
    int i;
    long tmp;
    
    i = (x * SPEEDLUTSIZE) / brakingDist;
    if (i < 0) {
        i = 0;
    } else if (i > (SPEEDLUTSIZE-1)) {
        i = SPEEDLUTSIZE-1;
    }//end if
    

    // scaling *100 and another *100 to get percentages
    tmp = (SpeedFromPosLUT[i] * maxSpeed) / SPEEDLUTSCALING;
    
    // don't return too small speeds, we can neither measure nor set such small speeds
    if (abs(tmp) >= MINIMALIDEALSPEED) {
        return tmp;
    } else {
        return MINIMALIDEALSPEED * sign(maxSpeed);
    }// end if


}//end function



safecall void InitSpeedFromPosLUT()  {
	SpeedFromPosLUT[0] = 10000;
	SpeedFromPosLUT[1] = 9983;
	SpeedFromPosLUT[2] = 9967;
	SpeedFromPosLUT[3] = 9950;
	SpeedFromPosLUT[4] = 9933;
	SpeedFromPosLUT[5] = 9916;
	SpeedFromPosLUT[6] = 9899;
	SpeedFromPosLUT[7] = 9883;
	SpeedFromPosLUT[8] = 9866;
	SpeedFromPosLUT[9] = 9849;
	SpeedFromPosLUT[10] = 9832;
	SpeedFromPosLUT[11] = 9815;
	SpeedFromPosLUT[12] = 9798;
	SpeedFromPosLUT[13] = 9781;
	SpeedFromPosLUT[14] = 9764;
	SpeedFromPosLUT[15] = 9747;
	SpeedFromPosLUT[16] = 9730;
	SpeedFromPosLUT[17] = 9713;
	SpeedFromPosLUT[18] = 9695;
	SpeedFromPosLUT[19] = 9678;
	SpeedFromPosLUT[20] = 9661;
	SpeedFromPosLUT[21] = 9644;
	SpeedFromPosLUT[22] = 9626;
	SpeedFromPosLUT[23] = 9609;
	SpeedFromPosLUT[24] = 9592;
	SpeedFromPosLUT[25] = 9574;
	SpeedFromPosLUT[26] = 9557;
	SpeedFromPosLUT[27] = 9539;
	SpeedFromPosLUT[28] = 9522;
	SpeedFromPosLUT[29] = 9504;
	SpeedFromPosLUT[30] = 9487;
	SpeedFromPosLUT[31] = 9469;
	SpeedFromPosLUT[32] = 9452;
	SpeedFromPosLUT[33] = 9434;
	SpeedFromPosLUT[34] = 9416;
	SpeedFromPosLUT[35] = 9399;
	SpeedFromPosLUT[36] = 9381;
	SpeedFromPosLUT[37] = 9363;
	SpeedFromPosLUT[38] = 9345;
	SpeedFromPosLUT[39] = 9327;
	SpeedFromPosLUT[40] = 9309;
	SpeedFromPosLUT[41] = 9292;
	SpeedFromPosLUT[42] = 9274;
	SpeedFromPosLUT[43] = 9256;
	SpeedFromPosLUT[44] = 9238;
	SpeedFromPosLUT[45] = 9220;
	SpeedFromPosLUT[46] = 9201;
	SpeedFromPosLUT[47] = 9183;
	SpeedFromPosLUT[48] = 9165;
	SpeedFromPosLUT[49] = 9147;
	SpeedFromPosLUT[50] = 9129;
	SpeedFromPosLUT[51] = 9110;
	SpeedFromPosLUT[52] = 9092;
	SpeedFromPosLUT[53] = 9074;
	SpeedFromPosLUT[54] = 9055;
	SpeedFromPosLUT[55] = 9037;
	SpeedFromPosLUT[56] = 9018;
	SpeedFromPosLUT[57] = 9000;
	SpeedFromPosLUT[58] = 8981;
	SpeedFromPosLUT[59] = 8963;
	SpeedFromPosLUT[60] = 8944;
	SpeedFromPosLUT[61] = 8926;
	SpeedFromPosLUT[62] = 8907;
	SpeedFromPosLUT[63] = 8888;
	SpeedFromPosLUT[64] = 8869;
	SpeedFromPosLUT[65] = 8851;
	SpeedFromPosLUT[66] = 8832;
	SpeedFromPosLUT[67] = 8813;
	SpeedFromPosLUT[68] = 8794;
	SpeedFromPosLUT[69] = 8775;
	SpeedFromPosLUT[70] = 8756;
	SpeedFromPosLUT[71] = 8737;
	SpeedFromPosLUT[72] = 8718;
	SpeedFromPosLUT[73] = 8699;
	SpeedFromPosLUT[74] = 8679;
	SpeedFromPosLUT[75] = 8660;
	SpeedFromPosLUT[76] = 8641;
	SpeedFromPosLUT[77] = 8622;
	SpeedFromPosLUT[78] = 8602;
	SpeedFromPosLUT[79] = 8583;
	SpeedFromPosLUT[80] = 8563;
	SpeedFromPosLUT[81] = 8544;
	SpeedFromPosLUT[82] = 8524;
	SpeedFromPosLUT[83] = 8505;
	SpeedFromPosLUT[84] = 8485;
	SpeedFromPosLUT[85] = 8466;
	SpeedFromPosLUT[86] = 8446;
	SpeedFromPosLUT[87] = 8426;
	SpeedFromPosLUT[88] = 8406;
	SpeedFromPosLUT[89] = 8386;
	SpeedFromPosLUT[90] = 8367;
	SpeedFromPosLUT[91] = 8347;
	SpeedFromPosLUT[92] = 8327;
	SpeedFromPosLUT[93] = 8307;
	SpeedFromPosLUT[94] = 8287;
	SpeedFromPosLUT[95] = 8266;
	SpeedFromPosLUT[96] = 8246;
	SpeedFromPosLUT[97] = 8226;
	SpeedFromPosLUT[98] = 8206;
	SpeedFromPosLUT[99] = 8185;
	SpeedFromPosLUT[100] = 8165;
	SpeedFromPosLUT[101] = 8145;
	SpeedFromPosLUT[102] = 8124;
	SpeedFromPosLUT[103] = 8103;
	SpeedFromPosLUT[104] = 8083;
	SpeedFromPosLUT[105] = 8062;
	SpeedFromPosLUT[106] = 8042;
	SpeedFromPosLUT[107] = 8021;
	SpeedFromPosLUT[108] = 8000;
	SpeedFromPosLUT[109] = 7979;
	SpeedFromPosLUT[110] = 7958;
	SpeedFromPosLUT[111] = 7937;
	SpeedFromPosLUT[112] = 7916;
	SpeedFromPosLUT[113] = 7895;
	SpeedFromPosLUT[114] = 7874;
	SpeedFromPosLUT[115] = 7853;
	SpeedFromPosLUT[116] = 7832;
	SpeedFromPosLUT[117] = 7810;
	SpeedFromPosLUT[118] = 7789;
	SpeedFromPosLUT[119] = 7767;
	SpeedFromPosLUT[120] = 7746;
	SpeedFromPosLUT[121] = 7724;
	SpeedFromPosLUT[122] = 7703;
	SpeedFromPosLUT[123] = 7681;
	SpeedFromPosLUT[124] = 7659;
	SpeedFromPosLUT[125] = 7638;
	SpeedFromPosLUT[126] = 7616;
	SpeedFromPosLUT[127] = 7594;
	SpeedFromPosLUT[128] = 7572;
	SpeedFromPosLUT[129] = 7550;
	SpeedFromPosLUT[130] = 7528;
	SpeedFromPosLUT[131] = 7506;
	SpeedFromPosLUT[132] = 7483;
	SpeedFromPosLUT[133] = 7461;
	SpeedFromPosLUT[134] = 7439;
	SpeedFromPosLUT[135] = 7416;
	SpeedFromPosLUT[136] = 7394;
	SpeedFromPosLUT[137] = 7371;
	SpeedFromPosLUT[138] = 7348;
	SpeedFromPosLUT[139] = 7326;
	SpeedFromPosLUT[140] = 7303;
	SpeedFromPosLUT[141] = 7280;
	SpeedFromPosLUT[142] = 7257;
	SpeedFromPosLUT[143] = 7234;
	SpeedFromPosLUT[144] = 7211;
	SpeedFromPosLUT[145] = 7188;
	SpeedFromPosLUT[146] = 7165;
	SpeedFromPosLUT[147] = 7141;
	SpeedFromPosLUT[148] = 7118;
	SpeedFromPosLUT[149] = 7095;
	SpeedFromPosLUT[150] = 7071;
	SpeedFromPosLUT[151] = 7047;
	SpeedFromPosLUT[152] = 7024;
	SpeedFromPosLUT[153] = 7000;
	SpeedFromPosLUT[154] = 6976;
	SpeedFromPosLUT[155] = 6952;
	SpeedFromPosLUT[156] = 6928;
	SpeedFromPosLUT[157] = 6904;
	SpeedFromPosLUT[158] = 6880;
	SpeedFromPosLUT[159] = 6856;
	SpeedFromPosLUT[160] = 6831;
	SpeedFromPosLUT[161] = 6807;
	SpeedFromPosLUT[162] = 6782;
	SpeedFromPosLUT[163] = 6758;
	SpeedFromPosLUT[164] = 6733;
	SpeedFromPosLUT[165] = 6708;
	SpeedFromPosLUT[166] = 6683;
	SpeedFromPosLUT[167] = 6658;
	SpeedFromPosLUT[168] = 6633;
	SpeedFromPosLUT[169] = 6608;
	SpeedFromPosLUT[170] = 6583;
	SpeedFromPosLUT[171] = 6557;
	SpeedFromPosLUT[172] = 6532;
	SpeedFromPosLUT[173] = 6506;
	SpeedFromPosLUT[174] = 6481;
	SpeedFromPosLUT[175] = 6455;
	SpeedFromPosLUT[176] = 6429;
	SpeedFromPosLUT[177] = 6403;
	SpeedFromPosLUT[178] = 6377;
	SpeedFromPosLUT[179] = 6351;
	SpeedFromPosLUT[180] = 6325;
	SpeedFromPosLUT[181] = 6298;
	SpeedFromPosLUT[182] = 6272;
	SpeedFromPosLUT[183] = 6245;
	SpeedFromPosLUT[184] = 6218;
	SpeedFromPosLUT[185] = 6191;
	SpeedFromPosLUT[186] = 6164;
	SpeedFromPosLUT[187] = 6137;
	SpeedFromPosLUT[188] = 6110;
	SpeedFromPosLUT[189] = 6083;
	SpeedFromPosLUT[190] = 6055;
	SpeedFromPosLUT[191] = 6028;
	SpeedFromPosLUT[192] = 6000;
	SpeedFromPosLUT[193] = 5972;
	SpeedFromPosLUT[194] = 5944;
	SpeedFromPosLUT[195] = 5916;
	SpeedFromPosLUT[196] = 5888;
	SpeedFromPosLUT[197] = 5859;
	SpeedFromPosLUT[198] = 5831;
	SpeedFromPosLUT[199] = 5802;
	SpeedFromPosLUT[200] = 5774;
	SpeedFromPosLUT[201] = 5745;
	SpeedFromPosLUT[202] = 5715;
	SpeedFromPosLUT[203] = 5686;
	SpeedFromPosLUT[204] = 5657;
	SpeedFromPosLUT[205] = 5627;
	SpeedFromPosLUT[206] = 5598;
	SpeedFromPosLUT[207] = 5568;
	SpeedFromPosLUT[208] = 5538;
	SpeedFromPosLUT[209] = 5508;
	SpeedFromPosLUT[210] = 5477;
	SpeedFromPosLUT[211] = 5447;
	SpeedFromPosLUT[212] = 5416;
	SpeedFromPosLUT[213] = 5385;
	SpeedFromPosLUT[214] = 5354;
	SpeedFromPosLUT[215] = 5323;
	SpeedFromPosLUT[216] = 5292;
	SpeedFromPosLUT[217] = 5260;
	SpeedFromPosLUT[218] = 5228;
	SpeedFromPosLUT[219] = 5196;
	SpeedFromPosLUT[220] = 5164;
	SpeedFromPosLUT[221] = 5132;
	SpeedFromPosLUT[222] = 5099;
	SpeedFromPosLUT[223] = 5066;
	SpeedFromPosLUT[224] = 5033;
	SpeedFromPosLUT[225] = 5000;
	SpeedFromPosLUT[226] = 4967;
	SpeedFromPosLUT[227] = 4933;
	SpeedFromPosLUT[228] = 4899;
	SpeedFromPosLUT[229] = 4865;
	SpeedFromPosLUT[230] = 4830;
	SpeedFromPosLUT[231] = 4796;
	SpeedFromPosLUT[232] = 4761;
	SpeedFromPosLUT[233] = 4726;
	SpeedFromPosLUT[234] = 4690;
	SpeedFromPosLUT[235] = 4655;
	SpeedFromPosLUT[236] = 4619;
	SpeedFromPosLUT[237] = 4583;
	SpeedFromPosLUT[238] = 4546;
	SpeedFromPosLUT[239] = 4509;
	SpeedFromPosLUT[240] = 4472;
	SpeedFromPosLUT[241] = 4435;
	SpeedFromPosLUT[242] = 4397;
	SpeedFromPosLUT[243] = 4359;
	SpeedFromPosLUT[244] = 4320;
	SpeedFromPosLUT[245] = 4282;
	SpeedFromPosLUT[246] = 4243;
	SpeedFromPosLUT[247] = 4203;
	SpeedFromPosLUT[248] = 4163;
	SpeedFromPosLUT[249] = 4123;
	SpeedFromPosLUT[250] = 4082;
	SpeedFromPosLUT[251] = 4041;
	SpeedFromPosLUT[252] = 4000;
	SpeedFromPosLUT[253] = 3958;
	SpeedFromPosLUT[254] = 3916;
	SpeedFromPosLUT[255] = 3873;
	SpeedFromPosLUT[256] = 3830;
	SpeedFromPosLUT[257] = 3786;
	SpeedFromPosLUT[258] = 3742;
	SpeedFromPosLUT[259] = 3697;
	SpeedFromPosLUT[260] = 3651;
	SpeedFromPosLUT[261] = 3606;
	SpeedFromPosLUT[262] = 3559;
	SpeedFromPosLUT[263] = 3512;
	SpeedFromPosLUT[264] = 3464;
	SpeedFromPosLUT[265] = 3416;
	SpeedFromPosLUT[266] = 3367;
	SpeedFromPosLUT[267] = 3317;
	SpeedFromPosLUT[268] = 3266;
	SpeedFromPosLUT[269] = 3215;
	SpeedFromPosLUT[270] = 3162;
	SpeedFromPosLUT[271] = 3109;
	SpeedFromPosLUT[272] = 3055;
	SpeedFromPosLUT[273] = 3000;
	SpeedFromPosLUT[274] = 2944;
	SpeedFromPosLUT[275] = 2887;
	SpeedFromPosLUT[276] = 2828;
	SpeedFromPosLUT[277] = 2769;
	SpeedFromPosLUT[278] = 2708;
	SpeedFromPosLUT[279] = 2646;
	SpeedFromPosLUT[280] = 2582;
	SpeedFromPosLUT[281] = 2517;
	SpeedFromPosLUT[282] = 2449;
	SpeedFromPosLUT[283] = 2380;
	SpeedFromPosLUT[284] = 2309;
	SpeedFromPosLUT[285] = 2236;
	SpeedFromPosLUT[286] = 2160;
	SpeedFromPosLUT[287] = 2082;
	SpeedFromPosLUT[288] = 2000;
	SpeedFromPosLUT[289] = 1915;
	SpeedFromPosLUT[290] = 1826;
	SpeedFromPosLUT[291] = 1732;
	SpeedFromPosLUT[292] = 1633;
	SpeedFromPosLUT[293] = 1528;
	SpeedFromPosLUT[294] = 1414;
	SpeedFromPosLUT[295] = 1291;
	SpeedFromPosLUT[296] = 1155;
	SpeedFromPosLUT[297] = 1000;
	SpeedFromPosLUT[298] = 816;
	SpeedFromPosLUT[299] = 577;
	SpeedFromPosLUT[300] = 300; // was actually 0, but having that is not cool!
}//end void





#endif
