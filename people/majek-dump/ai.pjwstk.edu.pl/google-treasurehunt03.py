#!/usr/bin/python

#Node	Ip address	Routing table entry 	Routing table entry 	Routing table entry 	Default route
NODES = '''
A	119.202.35.182	130.191.92.124 => 54.228.180.240	54.228.180.240 => 219.78.87.73	61.252.194.0/24 => 142.27.180.2	163.43.172.135
B	54.228.180.240	225.154.178.228 => 119.202.35.182	23.110.92.22 => 185.198.6.217	185.198.6.0/24 => 163.43.172.135	219.78.87.73
C	185.198.6.217	61.252.194.164 => 54.228.180.240	54.228.180.240 => 61.252.194.164	130.191.92.0/24 => 82.58.236.110	75.243.82.143
D	61.252.194.164	61.252.194.164 => 82.58.236.110	119.202.35.182 => 225.154.178.228	75.243.82.0/24 => 130.191.92.124	38.80.147.199
E	225.154.178.228	225.154.178.228 => 202.135.136.70	23.110.92.22 => 35.212.134.59	202.135.136.0/24 => 61.252.194.164	229.35.212.162
F	35.212.134.59	130.191.92.124 => 130.191.92.124	202.135.136.70 => 229.35.212.162	219.78.87.0/24 => 202.135.136.70	225.154.178.228
G	130.191.92.124	163.43.172.135 => 38.80.147.199	202.135.136.70 => 23.110.92.22	229.35.212.0/24 => 35.212.134.59	61.252.194.164
H	38.80.147.199	130.191.92.124 => 130.191.92.124	219.78.87.73 => 61.252.194.164	142.27.180.0/24 => 23.110.92.22	229.35.212.162
I	229.35.212.162	54.228.180.240 => 202.135.136.70	225.154.178.228 => 35.212.134.59	23.110.92.0/24 => 38.80.147.199	225.154.178.228
J	202.135.136.70	163.43.172.135 => 229.35.212.162	35.212.134.59 => 23.110.92.22	130.191.92.0/24 => 35.212.134.59	225.154.178.228
K	23.110.92.22	142.27.180.2 => 130.191.92.124	219.78.87.73 => 38.80.147.199	38.80.147.0/24 => 185.198.6.217	61.252.194.164
L	82.58.236.110	130.191.92.124 => 61.252.194.164	163.43.172.135 => 75.243.82.143	54.228.180.0/24 => 23.110.92.22	142.27.180.2
M	219.78.87.73	23.110.92.22 => 119.202.35.182	219.78.87.73 => 54.228.180.240	130.191.92.0/24 => 163.43.172.135	82.58.236.110
N	163.43.172.135	130.191.92.124 => 75.243.82.143	61.252.194.164 => 54.228.180.240	229.35.212.0/24 => 119.202.35.182	219.78.87.73
O	75.243.82.143	130.191.92.124 => 142.27.180.2	142.27.180.2 => 185.198.6.217	202.135.136.0/24 => 82.58.236.110	163.43.172.135
P	142.27.180.2	35.212.134.59 => 119.202.35.182	130.191.92.124 => 185.198.6.217	119.202.35.0/24 => 75.243.82.143	82.58.236.110
'''
DESTIP='130.191.92.124'
STARTNODE='A'

nodes_by_ip = {}
nodes_by_name = {}
for line in NODES.strip().split('\n'):
    name, ip, r1, r2, r3, defaultroute = line.split('\t')
    node = {
        'name': name,
        'ip': ip,
        'routes': map(lambda r: r.split(' => '),[r1,r2,r3]),
        'defaultroute': defaultroute,
    }
    nodes_by_ip[ip] = node
    nodes_by_name[name] = node


def next(node, destip):
    assert(node['ip'] != destip)
    for s,d in node['routes']:
        if s.find('/') != -1:
            net, mask = s.split('/')
            assert(mask=='24')
            #  print "!!!%s %s==%s" % (node['name'], '.'.join(destip.split('.')[:3]),'.'.join(net.split('.')[:3]))
            if '.'.join(destip.split('.')[:3]) == '.'.join(net.split('.')[:3]):
                print "%s %s==%s" % (node['name'], destip, s)
                return d
        else:
            if destip == s:
                print "%s %s==%s" % (node['name'], destip, s)
                return d
    print "%s %s default %s" % (node['name'], destip, node['defaultroute'])
    return node['defaultroute']

nodes_list=[STARTNODE]
currip = nodes_by_name[STARTNODE]['ip']
while currip != DESTIP:
    node_ip = next(nodes_by_ip[currip], DESTIP)
    node = nodes_by_ip[node_ip]
    nodes_list.append(node['name'])
    currip = node['ip']

print "".join(nodes_list)