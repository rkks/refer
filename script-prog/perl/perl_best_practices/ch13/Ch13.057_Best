##############################################################################
##   Code fragment (Recommended) from Chapter 13 of "Perl Best Practices"   ##
##     Copyright (c) O'Reilly & Associates, 2005. All Rights Reserved.      ##
##  See: http://www.oreilly.com/pub/a/oreilly/ask_tim/2001/codepolicy.html  ##
##############################################################################


# Standard modules...
use strict;
use warnings;
use IO::Prompt;
use Carp;
use English qw( -no_match_vars );
use Data::Alias;
use Readonly;

my $value;

# If the attempt fails...
if ($EVAL_ERROR) {
    # If the candidate was considered too big, go with the maximum allowed...
    if ( X::TooBig->caught() ) {
        my @range = $EVAL_ERROR->get_range();
        $value = $range[-1];
    }
    # If the candidate was considered waaaaaytoo big, rethrow the exception...
    elsif ( X::WaaaaayTooBig->caught() ) {
        $EVAL_ERROR->rethrow();
    }
    # etc.
}

