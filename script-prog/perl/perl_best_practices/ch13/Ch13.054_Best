##############################################################################
##   Code fragment (Recommended) from Chapter 13 of "Perl Best Practices"   ##
##     Copyright (c) O'Reilly & Associates, 2005. All Rights Reserved.      ##
##  See: http://www.oreilly.com/pub/a/oreilly/ask_tim/2001/codepolicy.html  ##
##############################################################################


# Standard modules...
use strict;
use warnings;
use IO::Prompt;
use Carp;
use English qw( -no_match_vars );
use Data::Alias;
use Readonly;

Readonly my $MAX_INT => 0;

package X::TooBig;
sub new { 'oops' }

package X::WaaaaayTooBig;
use base qw( X::TooBig );
use Carp;

# [Implement variant behaviour here]
 
# and later...

my $num = 1;
 
croak( X::WaaaaayTooBig->new( {num=>$num} ) )
    if $num > $MAX_INT;

