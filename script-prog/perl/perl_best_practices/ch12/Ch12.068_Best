##############################################################################
##   Code fragment (Recommended) from Chapter 12 of "Perl Best Practices"   ##
##     Copyright (c) O'Reilly & Associates, 2005. All Rights Reserved.      ##
##  See: http://www.oreilly.com/pub/a/oreilly/ask_tim/2001/codepolicy.html  ##
##############################################################################


# Standard modules...
use strict;
use warnings;
use IO::Prompt;
use Carp;
use English qw( -no_match_vars );
use Data::Alias;
use Readonly;

my %option = (
    eat   => 'fruit',
    drink => 'water',
    head  => 'clear',
);

CONFIG_LINE:
while (my $config = <DATA>) {
    # Ignore lines that are unrecognisable...
    next CONFIG_LINE 
        if $config !~ m/ \A  (\S+)  \s* = \s*  ([^;]+) ;  \s* \# (.*)/xms;
 
    # Verify the option makes sense...
    my ($opt_name, $opt_val, $comment) = ($1, $2, $3);
 
    debug($comment);
    croak "Unknown option ($opt_name)" 
        if not exists $option{$opt_name};  # Name used as key
 
    # Record the configuration option...
    $option{$opt_name} = $opt_val;         # Names as key; value as value
}


sub debug {
    my ($msg) = @_;
    print "Found: $msg\n";
}
use Data::Dumper 'Dumper';
warn Dumper [ \%option ];

__DATA__
eat = cake;     # Food
drink = wine;   # Drink
head = off;     # Revolution!
