##############################################################################
## Code fragment (NOT RECOMMENDED) from Chapter 15 of "Perl Best Practices" ##
##     Copyright (c) O'Reilly & Associates, 2005. All Rights Reserved.      ##
##  See: http://www.oreilly.com/pub/a/oreilly/ask_tim/2001/codepolicy.html  ##
##############################################################################


# Standard modules...
use strict;
use warnings;
use IO::Prompt;
use Carp;
use English qw( -no_match_vars );
use Data::Alias;
use Readonly;

Readonly my $EMPTY_STR => q{};

# Convenience subroutine to flip individual bits...
sub flip_bit_in {
    my ($bitset_obj, $bitnum) = @_;
 
    my $bit_val = $bitset_obj->get_bit($bitnum);
    $bitset_obj->set_bit( $bitnum, !$bit_val );
 
    return;
}
 
# Convenience subroutine to provide a string representation of the bits...
sub stringify {
    my ($bitset_obj) = @_;
 
    my $bitstring = $EMPTY_STR;
    my $next_bitnum = 0;
 
    RETRIEVAL :
    while (1) {
        my $nextbit = $bitset_obj->get_bit($next_bitnum++);
        last RETRIEVAL if !defined $nextbit;
 
        $bitstring .= $nextbit;
    }
 
    return $bitstring;
}

