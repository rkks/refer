##############################################################################
## Code fragment (NOT RECOMMENDED) from Chapter 6 of "Perl Best Practices"  ##
##     Copyright (c) O'Reilly & Associates, 2005. All Rights Reserved.      ##
##  See: http://www.oreilly.com/pub/a/oreilly/ask_tim/2001/codepolicy.html  ##
##############################################################################


# Standard modules...
use strict;
use warnings;
use IO::Prompt;
use Carp;
use English qw( -no_match_vars );
use Data::Alias;
use Readonly;

my @clients = (
    {name=>'J.B.', volume=>1000, activity=> 10, rate=>20, volatility=>0.4},
    {name=>'E.F.', volume=> 100, activity=>100, rate=>3, volatility=>0.9},
    {name=>'H.G.', volume=>9000, activity=>  1, rate=>10, volatility=>0.5},
);

my $total;

Readonly my $WATCH_LEVEL => 10_000;
Readonly my $KEEP_LEVEL  => 20_000;

for my $client (@clients) {
    # Compute current and future client value...
    my $value     = $client->{volume} * $client->{rate};
    my $projected = $client->{activity} * $value;
 
    # Verify client is active, worth watching, and worth keeping...
    if ($client->{activity}
        && $value >= $WATCH_LEVEL
        && $projected >= $KEEP_LEVEL
    ) {
        # If so, add in the client's expected contribution...
        $total += $projected * $client->{volatility};
    }
}


use Data::Dumper 'Dumper';
warn Dumper [ $total ];
