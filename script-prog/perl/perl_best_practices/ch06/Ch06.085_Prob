##############################################################################
## Code fragment (NOT RECOMMENDED) from Chapter 6 of "Perl Best Practices"  ##
##     Copyright (c) O'Reilly & Associates, 2005. All Rights Reserved.      ##
##  See: http://www.oreilly.com/pub/a/oreilly/ask_tim/2001/codepolicy.html  ##
##############################################################################


# Standard modules...
use strict;
use warnings;
use IO::Prompt;
use Carp;
use English qw( -no_match_vars );
use Data::Alias;
use Readonly;

Readonly my $MAX_NUMBER_OF_ATTEMPTS => 10;

sub get_big_int {
    my $int;
 
    TRY:
    do {
        # Request an integer...
        print 'Enter a large integer: ';
        $int = <>;
 
        # That's not an integer!...
        next TRY if $int !~ /\A [-+]? \d+ \n? \z/xms;
 
        # Otherwise tidy it up a little...
        chomp $int;
    } while $int < 10;   # Until the input is more than a single digit
 
    return $int;
}
 
# and later...
 
for (1..$MAX_NUMBER_OF_ATTEMPTS) {
    print sqrt get_big_int(), "\n";
}

